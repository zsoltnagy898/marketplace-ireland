/**
 * MIT License
 *
 * Copyright (c) 2017 Shota Fuji
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import dedent from 'dedent';
import { compile } from 'vue-template-compiler';
import Vue from 'vue';
import hljs from 'highlight.js';
import marked from 'marked';

var defaultOptions = {
    header: true,
    source: true,
    styles: {},
    summary: '',
    propTables: null,
    propTablesExclude: null
};

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

var __assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
};

var RuntimeComponent = {
    toInfo: function toInfo(c, name) {
        return {
            name: name || c.name || c.options && c.options.name || '',
            component: c.options || c
        };
    }
};

var constructorToString = function constructorToString(constructor) {
    if (constructor instanceof Array) {
        return constructor.map(constructorToString).join(' | ');
    } else if (constructor === Number) {
        return 'number';
    } else if (constructor === String) {
        return 'string';
    } else if (constructor === Object) {
        return 'object';
    } else if (constructor === Boolean) {
        return 'boolean';
    } else if (constructor === Function) {
        return "function";
    } else if (constructor === Symbol) {
        return 'Symbol';
    } else if (constructor === Array) {
        return 'array';
    } else {
        return constructor.name || 'unknown';
    }
};

function getPropsInfoList(component, story) {
    var props = component.props;
    if (!props) {
        return [];
    }
    return Object.keys(props).map(function (name) {
        var prop = props[name];
        var description = '';
        if (story.propsDescription && story.propsDescription[name]) {
            description = story.propsDescription[name];
        }
        if (typeof prop === 'function') {
            return {
                name: name,
                type: constructorToString(prop),
                required: false,
                description: description,
                default: undefined
            };
        }
        return {
            name: name,
            type: constructorToString(prop.type),
            required: !!prop.required,
            description: description,
            default: typeof prop.default === 'function' ? prop.default() : prop.default
        };
    });
}

var removeDuplicates = (function (arr) {
    return arr.filter(function (e, i) {
        return arr.indexOf(e) === i;
    });
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

var fromTemplate = function fromTemplate(template) {
    var ast = compile(dedent(template)).ast;
    if (!ast) {
        return [];
    }
    return removeDuplicates(retrieveTagNamesFromAST(ast));
};
var retrieveTagNamesFromAST = function retrieveTagNamesFromAST(el) {
    return Array.from(el.children || []).map(function (e) {
        return retrieveTagNamesFromAST(e);
    }).slice().reduce(function (dest, cur) {
        return dest.concat(cur);
    }, el.tag ? [el.tag] : []);
};
var fromJSX = function fromJSX(render) {
    var result = [];
    render(function (tag, dataObject, _children) {
        switch (typeof tag === 'undefined' ? 'undefined' : _typeof(tag)) {
            case 'string':
                result.push(tag);
                return;
            case 'object':
                if (tag.name) {
                    result.push(tag.name);
                    return;
                }
                return;
            case 'function':
                if (tag.options && typeof tag.options.name === 'string') {
                    result.push(tag.options.name);
                    return;
                }
                return;
            default:
                console.warn(tag);
                return;
        }
    }, {});
    return removeDuplicates(result);
};

function hyphenate(input) {
    return input.replace(/\B([A-Z])/g, '-$1').toLowerCase();
}

function lookupComponent(name, localComponents) {
    return lookupComponentFrom(name, localComponents) || lookupComponentFrom(name, Vue.options.components);
}
function lookupComponentFrom(name, components) {
    if (!components) {
        return null;
    }
    for (var componentName in components) {
        if (hyphenate(componentName) === name) {
            var component = components[componentName];
            return RuntimeComponent.toInfo(component, componentName);
        }
    }
    return null;
}

function parseStoryComponent(story) {
    if (!story.template && !story.render) {
        throw new Error('`template` or `render` must be on component options, but got undefined.');
    }
    var tagNames = story.template ? fromTemplate(story.template).map(hyphenate) : fromJSX(story.render);
    var components = tagNames.map(function (tagName) {
        return lookupComponent(tagName, story.components);
    }).filter(function (info) {
        return !!info;
    });
    return components;
}

var getJSXFromRenderFn = function getJSXFromRenderFn(render) {
    return render(createJSX);
};
function createJSX(tag, childrenOrData, _children) {
    var data = (childrenOrData instanceof Array ? {} : childrenOrData) || {};
    var children = (childrenOrData instanceof Array ? childrenOrData : _children) || [];
    var tagName = getTagName(tag);
    var props = formatDataObject(data);
    return children.length ? "<" + tagName + (props ? ' ' + props : '') + ">" + children.join('') + "</" + tagName + ">" : "<" + tagName + (props ? ' ' + props : '') + "/>";
}
var Anonymous = 'Anonymous';
var getTagName = function getTagName(tag) {
    if (!tag) {
        return Anonymous;
    } else if (typeof tag === 'string') {
        return tag;
    } else if (tag.name) {
        var t = tag;
        if (!t.options) {
            return t.name || Anonymous;
        } else {
            return t.options.name || Anonymous;
        }
    } else {
        return Anonymous;
    }
};
var formatDataObject = function formatDataObject(dataObject) {
    return formatDataObjectItem(dataObject.props).concat(formatDataObjectItem(dataObject.attrs), formatDataObjectItem(dataObject.domProps, 'domProps'), formatDataObjectItem(dataObject.on, 'on'), formatDataObjectItem(dataObject.nativeOn, 'nativeOn'), dataObject.class ? [formatProp('class', dataObject.class)] : [], dataObject.style ? [formatProp('style', dataObject.style)] : [], dataObject.key ? [formatProp('key', dataObject.key)] : [], dataObject.ref ? [formatProp('ref', dataObject.ref)] : [], dataObject.slot ? [formatProp('slot', dataObject.slot)] : []).join(' ');
};
var formatDataObjectItem = function formatDataObjectItem(item, prefix) {
    if (prefix === void 0) {
        prefix = '';
    }
    return item ? Object.keys(item).map(function (key) {
        return formatProp(prefix ? prefix + key[0].toUpperCase() + key.slice(1) : key, item[key]);
    }) : [];
};
var formatProp = function formatProp(k, v) {
    return typeof v === 'string' ? k + "=\"" + v + "\"" : typeof v === 'function' ? k + "={" + v.toString() + "}" : k + "={" + JSON.stringify(v) + "}";
};

/* script */

/* template */
var __vue_render__ = function __vue_render__() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("h2", { staticClass: "section-title" }, [_vm._t("default")], 2);
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

var __vue_template__ = typeof __vue_render__ !== 'undefined' ? { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ } : {};
/* style */
var __vue_inject_styles__ = function (inject) {
  if (!inject) return;
  inject("data-v-8e60f2c4_0", { source: "\n.section-title[data-v-8e60f2c4] {\n  font-size: 1.5em;\n  margin-top: 2em;\n  padding-bottom: 0.5em;\n  border-bottom: 1.5px solid #eee;\n}\n", map: undefined, media: undefined });
};
/* scoped */
var __vue_scope_id__ = "data-v-8e60f2c4";
/* module identifier */
var __vue_module_identifier__ = undefined;
/* functional template */
var __vue_is_functional_template__ = false;
/* component normalizer */
function __vue_normalize__(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {
  var component = script || {};

  {
    component.__file = "/home/pockawoooh/development/github.com/pocka/storybook-addon-vue-info/src/components/SectionTitle.vue";
  }

  if (!component.render) {
    component.render = template.render;
    component.staticRenderFns = template.staticRenderFns;
    component._compiled = true;

    if (functional) component.functional = true;
  }

  component._scopeId = scope;

  {
    var hook = void 0;
    if (style) {
      hook = function hook(context) {
        style.call(this, createInjector(context));
      };
    }

    if (hook !== undefined) {
      if (component.functional) {
        // register for functional component in vue file
        var originalRender = component.render;
        component.render = function renderWithStyleInjection(h, context) {
          hook.call(context);
          return originalRender(h, context);
        };
      } else {
        // inject component registration as beforeCreate hook
        var existing = component.beforeCreate;
        component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
      }
    }
  }

  return component;
}
/* style inject */
function __vue_create_injector__() {
  var head = document.head || document.getElementsByTagName('head')[0];
  var styles = {};
  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

  return function addStyle(id, css) {
    if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) return; // SSR styles are present.

    var group = isOldIE ? css.media || 'default' : id;
    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

    if (!style.ids.includes(id)) {
      var code = css.source;
      var index = style.ids.length;

      style.ids.push(id);

      if (isOldIE) {
        style.element = style.element || document.querySelector('style[data-group=' + group + ']');
      }

      if (!style.element) {
        var el = style.element = document.createElement('style');
        el.type = 'text/css';

        if (css.media) el.setAttribute('media', css.media);
        if (isOldIE) {
          el.setAttribute('data-group', group);
          el.setAttribute('data-next-index', '0');
        }

        head.appendChild(el);
      }

      if (isOldIE) {
        index = parseInt(style.element.getAttribute('data-next-index'));
        style.element.setAttribute('data-next-index', index + 1);
      }

      if (style.element.styleSheet) {
        style.parts.push(code);
        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\n');
      } else {
        var textNode = document.createTextNode(code);
        var nodes = style.element.childNodes;
        if (nodes[index]) style.element.removeChild(nodes[index]);
        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);
      }
    }
  };
}
/* style inject SSR */

var SectionTitle = __vue_normalize__(__vue_template__, __vue_inject_styles__, typeof __vue_script__ === 'undefined' ? {} : __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, typeof __vue_create_injector__ !== 'undefined' ? __vue_create_injector__ : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});

var script = {
  props: {
    descriptionHtml: {
      type: String,
      default: '<noscript></noscript>'
    }
  }
};

var __vue_script__$1 = script;

/* template */
var __vue_render__$1 = function __vue_render__() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("p", {
    staticClass: "summary",
    domProps: { innerHTML: _vm._s(_vm.descriptionHtml) }
  });
};
var __vue_staticRenderFns__$1 = [];
__vue_render__$1._withStripped = true;

var __vue_template__$1 = typeof __vue_render__$1 !== 'undefined' ? { render: __vue_render__$1, staticRenderFns: __vue_staticRenderFns__$1 } : {};
/* style */
var __vue_inject_styles__$1 = function (inject) {
  if (!inject) return;
  inject("data-v-2556e9e8_0", { source: "\n.summary[data-v-2556e9e8] {\n  color: #777;\n}\n.summary[data-v-2556e9e8] code,\n.summary[data-v-2556e9e8] pre {\n  padding: 0.2em 0.5em;\n  background-color: #eee;\n  border-radius: 3px;\n}\n.summary[data-v-2556e9e8] pre {\n  padding: 1em;\n}\n.summary[data-v-2556e9e8] pre > code {\n  padding: 0;\n  background-color: transparent;\n  border-radius: 0;\n}\n", map: undefined, media: undefined });
};
/* scoped */
var __vue_scope_id__$1 = "data-v-2556e9e8";
/* module identifier */
var __vue_module_identifier__$1 = undefined;
/* functional template */
var __vue_is_functional_template__$1 = false;
/* component normalizer */
function __vue_normalize__$1(template, style, script$$1, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {
  var component = script$$1 || {};

  {
    component.__file = "/home/pockawoooh/development/github.com/pocka/storybook-addon-vue-info/src/components/InfoDescription.vue";
  }

  if (!component.render) {
    component.render = template.render;
    component.staticRenderFns = template.staticRenderFns;
    component._compiled = true;

    if (functional) component.functional = true;
  }

  component._scopeId = scope;

  {
    var hook = void 0;
    if (style) {
      hook = function hook(context) {
        style.call(this, createInjector(context));
      };
    }

    if (hook !== undefined) {
      if (component.functional) {
        // register for functional component in vue file
        var originalRender = component.render;
        component.render = function renderWithStyleInjection(h, context) {
          hook.call(context);
          return originalRender(h, context);
        };
      } else {
        // inject component registration as beforeCreate hook
        var existing = component.beforeCreate;
        component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
      }
    }
  }

  return component;
}
/* style inject */
function __vue_create_injector__$1() {
  var head = document.head || document.getElementsByTagName('head')[0];
  var styles = {};
  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

  return function addStyle(id, css) {
    if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) return; // SSR styles are present.

    var group = isOldIE ? css.media || 'default' : id;
    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

    if (!style.ids.includes(id)) {
      var code = css.source;
      var index = style.ids.length;

      style.ids.push(id);

      if (isOldIE) {
        style.element = style.element || document.querySelector('style[data-group=' + group + ']');
      }

      if (!style.element) {
        var el = style.element = document.createElement('style');
        el.type = 'text/css';

        if (css.media) el.setAttribute('media', css.media);
        if (isOldIE) {
          el.setAttribute('data-group', group);
          el.setAttribute('data-next-index', '0');
        }

        head.appendChild(el);
      }

      if (isOldIE) {
        index = parseInt(style.element.getAttribute('data-next-index'));
        style.element.setAttribute('data-next-index', index + 1);
      }

      if (style.element.styleSheet) {
        style.parts.push(code);
        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\n');
      } else {
        var textNode = document.createTextNode(code);
        var nodes = style.element.childNodes;
        if (nodes[index]) style.element.removeChild(nodes[index]);
        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);
      }
    }
  };
}
/* style inject SSR */

var InfoDescription = __vue_normalize__$1(__vue_template__$1, __vue_inject_styles__$1, typeof __vue_script__$1 === 'undefined' ? {} : __vue_script__$1, __vue_scope_id__$1, __vue_is_functional_template__$1, __vue_module_identifier__$1, typeof __vue_create_injector__$1 !== 'undefined' ? __vue_create_injector__$1 : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});

var script$1 = {
  props: {
    userStyle: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    title: {
      type: String,
      default: ''
    },
    subtitle: {
      type: String,
      default: ''
    }
  }
};

var __vue_script__$2 = script$1;

/* template */
var __vue_render__$2 = function __vue_render__() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", { staticClass: "info-header", style: _vm.userStyle.body }, [_c("h1", { staticClass: "title", style: _vm.userStyle.h1 }, [_vm._v("\n    " + _vm._s(_vm.title) + "\n  ")]), _vm._v(" "), _c("h2", { staticClass: "story-title", style: _vm.userStyle.h2 }, [_vm._v("\n    " + _vm._s(_vm.subtitle) + "\n  ")])]);
};
var __vue_staticRenderFns__$2 = [];
__vue_render__$2._withStripped = true;

var __vue_template__$2 = typeof __vue_render__$2 !== 'undefined' ? { render: __vue_render__$2, staticRenderFns: __vue_staticRenderFns__$2 } : {};
/* style */
var __vue_inject_styles__$2 = function (inject) {
  if (!inject) return;
  inject("data-v-2baa3063_0", { source: "\n.info-header[data-v-2baa3063] {\n  border-bottom: 1.5px solid #eee;\n}\n.title[data-v-2baa3063] {\n  margin-bottom: 0;\n}\n.story-title[data-v-2baa3063] {\n  color: #555;\n  margin-top: 0.5em;\n  font-weight: normal;\n  font-size: 1.2em;\n}\n", map: undefined, media: undefined });
};
/* scoped */
var __vue_scope_id__$2 = "data-v-2baa3063";
/* module identifier */
var __vue_module_identifier__$2 = undefined;
/* functional template */
var __vue_is_functional_template__$2 = false;
/* component normalizer */
function __vue_normalize__$2(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {
  var component = script || {};

  {
    component.__file = "/home/pockawoooh/development/github.com/pocka/storybook-addon-vue-info/src/components/InfoHeader.vue";
  }

  if (!component.render) {
    component.render = template.render;
    component.staticRenderFns = template.staticRenderFns;
    component._compiled = true;

    if (functional) component.functional = true;
  }

  component._scopeId = scope;

  {
    var hook = void 0;
    if (style) {
      hook = function hook(context) {
        style.call(this, createInjector(context));
      };
    }

    if (hook !== undefined) {
      if (component.functional) {
        // register for functional component in vue file
        var originalRender = component.render;
        component.render = function renderWithStyleInjection(h, context) {
          hook.call(context);
          return originalRender(h, context);
        };
      } else {
        // inject component registration as beforeCreate hook
        var existing = component.beforeCreate;
        component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
      }
    }
  }

  return component;
}
/* style inject */
function __vue_create_injector__$2() {
  var head = document.head || document.getElementsByTagName('head')[0];
  var styles = {};
  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

  return function addStyle(id, css) {
    if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) return; // SSR styles are present.

    var group = isOldIE ? css.media || 'default' : id;
    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

    if (!style.ids.includes(id)) {
      var code = css.source;
      var index = style.ids.length;

      style.ids.push(id);

      if (isOldIE) {
        style.element = style.element || document.querySelector('style[data-group=' + group + ']');
      }

      if (!style.element) {
        var el = style.element = document.createElement('style');
        el.type = 'text/css';

        if (css.media) el.setAttribute('media', css.media);
        if (isOldIE) {
          el.setAttribute('data-group', group);
          el.setAttribute('data-next-index', '0');
        }

        head.appendChild(el);
      }

      if (isOldIE) {
        index = parseInt(style.element.getAttribute('data-next-index'));
        style.element.setAttribute('data-next-index', index + 1);
      }

      if (style.element.styleSheet) {
        style.parts.push(code);
        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\n');
      } else {
        var textNode = document.createTextNode(code);
        var nodes = style.element.childNodes;
        if (nodes[index]) style.element.removeChild(nodes[index]);
        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);
      }
    }
  };
}
/* style inject SSR */

var InfoHeader = __vue_normalize__$2(__vue_template__$2, __vue_inject_styles__$2, typeof __vue_script__$2 === 'undefined' ? {} : __vue_script__$2, __vue_scope_id__$2, __vue_is_functional_template__$2, __vue_module_identifier__$2, typeof __vue_create_injector__$2 !== 'undefined' ? __vue_create_injector__$2 : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});

/* script */

/* template */
var __vue_render__$3 = function __vue_render__() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("span", { staticClass: "tag" }, [_vm._t("default")], 2);
};
var __vue_staticRenderFns__$3 = [];
__vue_render__$3._withStripped = true;

var __vue_template__$3 = typeof __vue_render__$3 !== 'undefined' ? { render: __vue_render__$3, staticRenderFns: __vue_staticRenderFns__$3 } : {};
/* style */
var __vue_inject_styles__$3 = function (inject) {
  if (!inject) return;
  inject("data-v-eb73f17e_0", { source: "\n.tag[data-v-eb73f17e] {\n  font-size: 0.7em;\n  padding: 0.2em 0.4em;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  background-color: #eee;\n  color: #333;\n}\n", map: undefined, media: undefined });
};
/* scoped */
var __vue_scope_id__$3 = "data-v-eb73f17e";
/* module identifier */
var __vue_module_identifier__$3 = undefined;
/* functional template */
var __vue_is_functional_template__$3 = false;
/* component normalizer */
function __vue_normalize__$3(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {
  var component = script || {};

  {
    component.__file = "/home/pockawoooh/development/github.com/pocka/storybook-addon-vue-info/src/components/Tag.vue";
  }

  if (!component.render) {
    component.render = template.render;
    component.staticRenderFns = template.staticRenderFns;
    component._compiled = true;

    if (functional) component.functional = true;
  }

  component._scopeId = scope;

  {
    var hook = void 0;
    if (style) {
      hook = function hook(context) {
        style.call(this, createInjector(context));
      };
    }

    if (hook !== undefined) {
      if (component.functional) {
        // register for functional component in vue file
        var originalRender = component.render;
        component.render = function renderWithStyleInjection(h, context) {
          hook.call(context);
          return originalRender(h, context);
        };
      } else {
        // inject component registration as beforeCreate hook
        var existing = component.beforeCreate;
        component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
      }
    }
  }

  return component;
}
/* style inject */
function __vue_create_injector__$3() {
  var head = document.head || document.getElementsByTagName('head')[0];
  var styles = {};
  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

  return function addStyle(id, css) {
    if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) return; // SSR styles are present.

    var group = isOldIE ? css.media || 'default' : id;
    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

    if (!style.ids.includes(id)) {
      var code = css.source;
      var index = style.ids.length;

      style.ids.push(id);

      if (isOldIE) {
        style.element = style.element || document.querySelector('style[data-group=' + group + ']');
      }

      if (!style.element) {
        var el = style.element = document.createElement('style');
        el.type = 'text/css';

        if (css.media) el.setAttribute('media', css.media);
        if (isOldIE) {
          el.setAttribute('data-group', group);
          el.setAttribute('data-next-index', '0');
        }

        head.appendChild(el);
      }

      if (isOldIE) {
        index = parseInt(style.element.getAttribute('data-next-index'));
        style.element.setAttribute('data-next-index', index + 1);
      }

      if (style.element.styleSheet) {
        style.parts.push(code);
        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\n');
      } else {
        var textNode = document.createTextNode(code);
        var nodes = style.element.childNodes;
        if (nodes[index]) style.element.removeChild(nodes[index]);
        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);
      }
    }
  };
}
/* style inject SSR */

var Tag = __vue_normalize__$3(__vue_template__$3, __vue_inject_styles__$3, typeof __vue_script__ === 'undefined' ? {} : __vue_script__, __vue_scope_id__$3, __vue_is_functional_template__$3, __vue_module_identifier__$3, typeof __vue_create_injector__$3 !== 'undefined' ? __vue_create_injector__$3 : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});

var script$2 = {
  components: { Tag: Tag },
  props: {
    prop: {
      type: Object,
      required: true
    }
  }
};

var __vue_script__$3 = script$2;

/* template */
var __vue_render__$4 = function __vue_render__() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("tr", { staticClass: "props-table-row" }, [_c("td", [_vm._v("\n    " + _vm._s(_vm.prop.name) + "\n    "), _vm.prop.required ? _c("tag", [_vm._v("required")]) : _vm._e()], 1), _vm._v(" "), _c("td", [_vm._v(_vm._s(_vm.prop.type))]), _vm._v(" "), _c("td", [_vm._v(_vm._s(_vm.prop.default))]), _vm._v(" "), _c("td", [_vm._v(_vm._s(_vm.prop.description))])]);
};
var __vue_staticRenderFns__$4 = [];
__vue_render__$4._withStripped = true;

var __vue_template__$4 = typeof __vue_render__$4 !== 'undefined' ? { render: __vue_render__$4, staticRenderFns: __vue_staticRenderFns__$4 } : {};
/* style */
var __vue_inject_styles__$4 = function (inject) {
  if (!inject) return;
  inject("data-v-548e6f36_0", { source: "\n.props-table-row[data-v-548e6f36] {\n  border-bottom: 1px solid #ccc;\n}\n.props-table-row td[data-v-548e6f36] {\n  padding: 0.5em 1em;\n  padding-right: 1.5em;\n}\n", map: undefined, media: undefined });
};
/* scoped */
var __vue_scope_id__$4 = "data-v-548e6f36";
/* module identifier */
var __vue_module_identifier__$4 = undefined;
/* functional template */
var __vue_is_functional_template__$4 = false;
/* component normalizer */
function __vue_normalize__$4(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {
  var component = script || {};

  {
    component.__file = "/home/pockawoooh/development/github.com/pocka/storybook-addon-vue-info/src/components/PropsTableRow.vue";
  }

  if (!component.render) {
    component.render = template.render;
    component.staticRenderFns = template.staticRenderFns;
    component._compiled = true;

    if (functional) component.functional = true;
  }

  component._scopeId = scope;

  {
    var hook = void 0;
    if (style) {
      hook = function hook(context) {
        style.call(this, createInjector(context));
      };
    }

    if (hook !== undefined) {
      if (component.functional) {
        // register for functional component in vue file
        var originalRender = component.render;
        component.render = function renderWithStyleInjection(h, context) {
          hook.call(context);
          return originalRender(h, context);
        };
      } else {
        // inject component registration as beforeCreate hook
        var existing = component.beforeCreate;
        component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
      }
    }
  }

  return component;
}
/* style inject */
function __vue_create_injector__$4() {
  var head = document.head || document.getElementsByTagName('head')[0];
  var styles = {};
  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

  return function addStyle(id, css) {
    if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) return; // SSR styles are present.

    var group = isOldIE ? css.media || 'default' : id;
    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

    if (!style.ids.includes(id)) {
      var code = css.source;
      var index = style.ids.length;

      style.ids.push(id);

      if (isOldIE) {
        style.element = style.element || document.querySelector('style[data-group=' + group + ']');
      }

      if (!style.element) {
        var el = style.element = document.createElement('style');
        el.type = 'text/css';

        if (css.media) el.setAttribute('media', css.media);
        if (isOldIE) {
          el.setAttribute('data-group', group);
          el.setAttribute('data-next-index', '0');
        }

        head.appendChild(el);
      }

      if (isOldIE) {
        index = parseInt(style.element.getAttribute('data-next-index'));
        style.element.setAttribute('data-next-index', index + 1);
      }

      if (style.element.styleSheet) {
        style.parts.push(code);
        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\n');
      } else {
        var textNode = document.createTextNode(code);
        var nodes = style.element.childNodes;
        if (nodes[index]) style.element.removeChild(nodes[index]);
        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);
      }
    }
  };
}
/* style inject SSR */

var PropsTableRow = __vue_normalize__$4(__vue_template__$4, __vue_inject_styles__$4, typeof __vue_script__$3 === 'undefined' ? {} : __vue_script__$3, __vue_scope_id__$4, __vue_is_functional_template__$4, __vue_module_identifier__$4, typeof __vue_create_injector__$4 !== 'undefined' ? __vue_create_injector__$4 : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});

var script$3 = {
  components: { PropsTableRow: PropsTableRow },
  props: {
    componentName: {
      type: String,
      default: ''
    },
    propsList: {
      type: Array,
      default: function _default() {
        return [];
      }
    }
  }
};

var __vue_script__$4 = script$3;

/* template */
var __vue_render__$5 = function __vue_render__() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", [_vm.componentName ? _c("h3", { staticClass: "component-name" }, [_vm._v('\n    "' + _vm._s(_vm.componentName) + '" Component\n  ')]) : _vm._e(), _vm._v(" "), _c("table", { staticClass: "props" }, [_vm._m(0), _vm._v(" "), _c("tbody", _vm._l(_vm.propsList, function (prop) {
    return _c("props-table-row", {
      key: prop.name,
      attrs: { prop: prop }
    });
  }))])]);
};
var __vue_staticRenderFns__$5 = [function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("thead", { staticClass: "props-head" }, [_c("tr", [_c("th", [_vm._v("Name")]), _vm._v(" "), _c("th", [_vm._v("Type")]), _vm._v(" "), _c("th", [_vm._v("Default")]), _vm._v(" "), _c("th", [_vm._v("Description")])])]);
}];
__vue_render__$5._withStripped = true;

var __vue_template__$5 = typeof __vue_render__$5 !== 'undefined' ? { render: __vue_render__$5, staticRenderFns: __vue_staticRenderFns__$5 } : {};
/* style */
var __vue_inject_styles__$5 = function (inject) {
  if (!inject) return;
  inject("data-v-f71efe74_0", { source: "\n.component-name[data-v-f71efe74] {\n  margin-bottom: 0.3em;\n}\n.props[data-v-f71efe74] {\n  border: 1px solid #ccc;\n  border-collapse: collapse;\n}\n.props-head[data-v-f71efe74] {\n  color: #888;\n  background-color: #eee;\n  text-align: left;\n}\n.props-head th[data-v-f71efe74] {\n  padding: 0.5em 1em;\n  padding-right: 1.5em;\n}\n", map: undefined, media: undefined });
};
/* scoped */
var __vue_scope_id__$5 = "data-v-f71efe74";
/* module identifier */
var __vue_module_identifier__$5 = undefined;
/* functional template */
var __vue_is_functional_template__$5 = false;
/* component normalizer */
function __vue_normalize__$5(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {
  var component = script || {};

  {
    component.__file = "/home/pockawoooh/development/github.com/pocka/storybook-addon-vue-info/src/components/PropsTable.vue";
  }

  if (!component.render) {
    component.render = template.render;
    component.staticRenderFns = template.staticRenderFns;
    component._compiled = true;

    if (functional) component.functional = true;
  }

  component._scopeId = scope;

  {
    var hook = void 0;
    if (style) {
      hook = function hook(context) {
        style.call(this, createInjector(context));
      };
    }

    if (hook !== undefined) {
      if (component.functional) {
        // register for functional component in vue file
        var originalRender = component.render;
        component.render = function renderWithStyleInjection(h, context) {
          hook.call(context);
          return originalRender(h, context);
        };
      } else {
        // inject component registration as beforeCreate hook
        var existing = component.beforeCreate;
        component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
      }
    }
  }

  return component;
}
/* style inject */
function __vue_create_injector__$5() {
  var head = document.head || document.getElementsByTagName('head')[0];
  var styles = {};
  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

  return function addStyle(id, css) {
    if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) return; // SSR styles are present.

    var group = isOldIE ? css.media || 'default' : id;
    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

    if (!style.ids.includes(id)) {
      var code = css.source;
      var index = style.ids.length;

      style.ids.push(id);

      if (isOldIE) {
        style.element = style.element || document.querySelector('style[data-group=' + group + ']');
      }

      if (!style.element) {
        var el = style.element = document.createElement('style');
        el.type = 'text/css';

        if (css.media) el.setAttribute('media', css.media);
        if (isOldIE) {
          el.setAttribute('data-group', group);
          el.setAttribute('data-next-index', '0');
        }

        head.appendChild(el);
      }

      if (isOldIE) {
        index = parseInt(style.element.getAttribute('data-next-index'));
        style.element.setAttribute('data-next-index', index + 1);
      }

      if (style.element.styleSheet) {
        style.parts.push(code);
        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\n');
      } else {
        var textNode = document.createTextNode(code);
        var nodes = style.element.childNodes;
        if (nodes[index]) style.element.removeChild(nodes[index]);
        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);
      }
    }
  };
}
/* style inject SSR */

var PropsTable = __vue_normalize__$5(__vue_template__$5, __vue_inject_styles__$5, typeof __vue_script__$4 === 'undefined' ? {} : __vue_script__$4, __vue_scope_id__$5, __vue_is_functional_template__$5, __vue_module_identifier__$5, typeof __vue_create_injector__$5 !== 'undefined' ? __vue_create_injector__$5 : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});

var script$4 = {
  components: {
    SectionTitle: SectionTitle
  },
  props: {
    userStyle: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    source: {
      type: String,
      required: true
    },
    lang: {
      type: String,
      required: true
    }
  },
  computed: {
    sourceCode: function sourceCode() {
      // Append ; for jsx to enable syntax highlighting
      return this.lang === 'jsx' ? ';' + this.source : this.source;
    }
  },
  watch: {
    source: function source() {
      this.highlight();
    }
  },
  mounted: function mounted() {
    this.highlight();
  },

  methods: {
    highlight: function highlight() {
      if (!this.$refs.code) {
        return;
      }

      hljs.highlightBlock(this.$refs.code, {
        languages: [this.lang]
      });
    }
  }
};

var __vue_script__$5 = script$4;

/* template */
var __vue_render__$6 = function __vue_render__() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", [_c("section-title", { style: _vm.userStyle.h1 }, [_vm._v("Story Source")]), _vm._v(" "), _c("pre", { ref: "code", staticClass: "code", class: _vm.lang }, [_c("code", [_vm._v(_vm._s(_vm.sourceCode))])])], 1);
};
var __vue_staticRenderFns__$6 = [];
__vue_render__$6._withStripped = true;

var __vue_template__$6 = typeof __vue_render__$6 !== 'undefined' ? { render: __vue_render__$6, staticRenderFns: __vue_staticRenderFns__$6 } : {};
/* style */
var __vue_inject_styles__$6 = function (inject) {
  if (!inject) return;
  inject("data-v-9678ce44_0", { source: "/*\n\ngithub.com style (c) Vasily Polovnyov <vast@whiteants.net>\n\n*/\n.hljs {\n  display: block;\n  overflow-x: auto;\n  padding: 0.5em;\n  color: #333;\n  background: #f8f8f8;\n}\n.hljs-comment,\n.hljs-quote {\n  color: #998;\n  font-style: italic;\n}\n.hljs-keyword,\n.hljs-selector-tag,\n.hljs-subst {\n  color: #333;\n  font-weight: bold;\n}\n.hljs-number,\n.hljs-literal,\n.hljs-variable,\n.hljs-template-variable,\n.hljs-tag .hljs-attr {\n  color: #008080;\n}\n.hljs-string,\n.hljs-doctag {\n  color: #d14;\n}\n.hljs-title,\n.hljs-section,\n.hljs-selector-id {\n  color: #900;\n  font-weight: bold;\n}\n.hljs-subst {\n  font-weight: normal;\n}\n.hljs-type,\n.hljs-class .hljs-title {\n  color: #458;\n  font-weight: bold;\n}\n.hljs-tag,\n.hljs-name,\n.hljs-attribute {\n  color: #000080;\n  font-weight: normal;\n}\n.hljs-regexp,\n.hljs-link {\n  color: #009926;\n}\n.hljs-symbol,\n.hljs-bullet {\n  color: #990073;\n}\n.hljs-built_in,\n.hljs-builtin-name {\n  color: #0086b3;\n}\n.hljs-meta {\n  color: #999;\n  font-weight: bold;\n}\n.hljs-deletion {\n  background: #fdd;\n}\n.hljs-addition {\n  background: #dfd;\n}\n.hljs-emphasis {\n  font-style: italic;\n}\n.hljs-strong {\n  font-weight: bold;\n}\n", map: undefined, media: undefined }), inject("data-v-9678ce44_1", { source: "\n.code[data-v-9678ce44] {\n  overflow: auto;\n  padding: 1em;\n  border-radius: 3px;\n}\n", map: undefined, media: undefined });
};
/* scoped */
var __vue_scope_id__$6 = "data-v-9678ce44";
/* module identifier */
var __vue_module_identifier__$6 = undefined;
/* functional template */
var __vue_is_functional_template__$6 = false;
/* component normalizer */
function __vue_normalize__$6(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {
  var component = script || {};

  {
    component.__file = "/home/pockawoooh/development/github.com/pocka/storybook-addon-vue-info/src/components/StorySource.vue";
  }

  if (!component.render) {
    component.render = template.render;
    component.staticRenderFns = template.staticRenderFns;
    component._compiled = true;

    if (functional) component.functional = true;
  }

  component._scopeId = scope;

  {
    var hook = void 0;
    if (style) {
      hook = function hook(context) {
        style.call(this, createInjector(context));
      };
    }

    if (hook !== undefined) {
      if (component.functional) {
        // register for functional component in vue file
        var originalRender = component.render;
        component.render = function renderWithStyleInjection(h, context) {
          hook.call(context);
          return originalRender(h, context);
        };
      } else {
        // inject component registration as beforeCreate hook
        var existing = component.beforeCreate;
        component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
      }
    }
  }

  return component;
}
/* style inject */
function __vue_create_injector__$6() {
  var head = document.head || document.getElementsByTagName('head')[0];
  var styles = {};
  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

  return function addStyle(id, css) {
    if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) return; // SSR styles are present.

    var group = isOldIE ? css.media || 'default' : id;
    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

    if (!style.ids.includes(id)) {
      var code = css.source;
      var index = style.ids.length;

      style.ids.push(id);

      if (isOldIE) {
        style.element = style.element || document.querySelector('style[data-group=' + group + ']');
      }

      if (!style.element) {
        var el = style.element = document.createElement('style');
        el.type = 'text/css';

        if (css.media) el.setAttribute('media', css.media);
        if (isOldIE) {
          el.setAttribute('data-group', group);
          el.setAttribute('data-next-index', '0');
        }

        head.appendChild(el);
      }

      if (isOldIE) {
        index = parseInt(style.element.getAttribute('data-next-index'));
        style.element.setAttribute('data-next-index', index + 1);
      }

      if (style.element.styleSheet) {
        style.parts.push(code);
        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\n');
      } else {
        var textNode = document.createTextNode(code);
        var nodes = style.element.childNodes;
        if (nodes[index]) style.element.removeChild(nodes[index]);
        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);
      }
    }
  };
}
/* style inject SSR */

var StorySource = __vue_normalize__$6(__vue_template__$6, __vue_inject_styles__$6, typeof __vue_script__$5 === 'undefined' ? {} : __vue_script__$5, __vue_scope_id__$6, __vue_is_functional_template__$6, __vue_module_identifier__$6, typeof __vue_create_injector__$6 !== 'undefined' ? __vue_create_injector__$6 : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});

var script$5 = {
  components: {
    InfoDescription: InfoDescription,
    InfoHeader: InfoHeader,
    PropsTable: PropsTable,
    SectionTitle: SectionTitle,
    StorySource: StorySource
  },
  props: {
    storyKind: {
      type: String,
      required: true
    },
    storyTitle: {
      type: String,
      required: true
    },
    /** Summary "HTML" string */
    summary: {
      type: String,
      default: ''
    },
    template: {
      type: String,
      required: true
    },
    /** Language for highlighting story source */
    lang: {
      type: String,
      required: true
    },
    componentDetails: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    showHeader: {
      type: Boolean,
      required: true
    },
    showSource: {
      type: Boolean,
      required: true
    },
    userStyle: {
      type: Object,
      required: true
    }
  }
};

var __vue_script__$6 = script$5;

/* template */
var __vue_render__$7 = function __vue_render__() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", { staticClass: "vue-info", style: _vm.userStyle.info }, [_vm.showHeader ? _c("info-header", {
    attrs: {
      "user-style": _vm.userStyle.header,
      title: _vm.storyKind,
      subtitle: _vm.storyTitle
    }
  }) : _vm._e(), _vm._v(" "), _c("div", { staticClass: "info-content", style: _vm.userStyle.infoContent }, [_vm._t("default")], 2), _vm._v(" "), _vm.summary ? _c("info-description", { attrs: { "description-html": _vm.summary } }) : _vm._e(), _vm._v(" "), _vm.showSource ? _c("story-source", {
    attrs: {
      "user-style": _vm.userStyle.source,
      source: _vm.template,
      lang: _vm.lang
    }
  }) : _vm._e(), _vm._v(" "), _c("section-title", { style: _vm.userStyle.propTableHead }, [_vm._v("Props")]), _vm._v(" "), _vm._l(_vm.componentDetails, function (detail) {
    return _c("props-table", {
      key: detail.info.name,
      attrs: {
        "props-list": detail.propsList,
        "component-name": detail.info.name
      }
    });
  })], 2);
};
var __vue_staticRenderFns__$7 = [];
__vue_render__$7._withStripped = true;

var __vue_template__$7 = typeof __vue_render__$7 !== 'undefined' ? { render: __vue_render__$7, staticRenderFns: __vue_staticRenderFns__$7 } : {};
/* style */
var __vue_inject_styles__$7 = function (inject) {
  if (!inject) return;
  inject("data-v-60238eed_0", { source: "\n.vue-info[data-v-60238eed] {\n  padding: 0 1em;\n}\n.info-content[data-v-60238eed] {\n  margin-top: 2em;\n  margin-bottom: 2em;\n}\n", map: undefined, media: undefined });
};
/* scoped */
var __vue_scope_id__$7 = "data-v-60238eed";
/* module identifier */
var __vue_module_identifier__$7 = undefined;
/* functional template */
var __vue_is_functional_template__$7 = false;
/* component normalizer */
function __vue_normalize__$7(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {
  var component = script || {};

  {
    component.__file = "/home/pockawoooh/development/github.com/pocka/storybook-addon-vue-info/src/components/InfoView.vue";
  }

  if (!component.render) {
    component.render = template.render;
    component.staticRenderFns = template.staticRenderFns;
    component._compiled = true;

    if (functional) component.functional = true;
  }

  component._scopeId = scope;

  {
    var hook = void 0;
    if (style) {
      hook = function hook(context) {
        style.call(this, createInjector(context));
      };
    }

    if (hook !== undefined) {
      if (component.functional) {
        // register for functional component in vue file
        var originalRender = component.render;
        component.render = function renderWithStyleInjection(h, context) {
          hook.call(context);
          return originalRender(h, context);
        };
      } else {
        // inject component registration as beforeCreate hook
        var existing = component.beforeCreate;
        component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
      }
    }
  }

  return component;
}
/* style inject */
function __vue_create_injector__$7() {
  var head = document.head || document.getElementsByTagName('head')[0];
  var styles = {};
  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

  return function addStyle(id, css) {
    if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) return; // SSR styles are present.

    var group = isOldIE ? css.media || 'default' : id;
    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

    if (!style.ids.includes(id)) {
      var code = css.source;
      var index = style.ids.length;

      style.ids.push(id);

      if (isOldIE) {
        style.element = style.element || document.querySelector('style[data-group=' + group + ']');
      }

      if (!style.element) {
        var el = style.element = document.createElement('style');
        el.type = 'text/css';

        if (css.media) el.setAttribute('media', css.media);
        if (isOldIE) {
          el.setAttribute('data-group', group);
          el.setAttribute('data-next-index', '0');
        }

        head.appendChild(el);
      }

      if (isOldIE) {
        index = parseInt(style.element.getAttribute('data-next-index'));
        style.element.setAttribute('data-next-index', index + 1);
      }

      if (style.element.styleSheet) {
        style.parts.push(code);
        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\n');
      } else {
        var textNode = document.createTextNode(code);
        var nodes = style.element.childNodes;
        if (nodes[index]) style.element.removeChild(nodes[index]);
        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);
      }
    }
  };
}
/* style inject SSR */

var InfoView = __vue_normalize__$7(__vue_template__$7, __vue_inject_styles__$7, typeof __vue_script__$6 === 'undefined' ? {} : __vue_script__$6, __vue_scope_id__$7, __vue_is_functional_template__$7, __vue_module_identifier__$7, typeof __vue_create_injector__$7 !== 'undefined' ? __vue_create_injector__$7 : function () {}, typeof __vue_create_injector_ssr__ !== 'undefined' ? __vue_create_injector_ssr__ : function () {});

function getDuplicatedPropsDesc(story, propTablesComponents) {
    var propsDescription = story.propsDescription;
    var duplicatedPropName = '';
    if (propsDescription) {
        Object.keys(propsDescription).some(function (propName) {
            var count = 0;
            return propTablesComponents.some(function (_a) {
                var component = _a.component;
                if (component.props.hasOwnProperty(propName)) {
                    count++;
                }
                if (count > 1) {
                    duplicatedPropName = propName;
                    return true;
                }
            });
        });
    }
    return duplicatedPropName;
}

var renderer = new marked.Renderer();
renderer.code = function (code, lang) {
    return "<pre><code class=\"hljs\">" + hljs.highlightAuto(code, lang ? [lang] : undefined).value + "</code></pre>";
};
marked.setOptions({ renderer: renderer });
function withInfo(options) {
    return function (storyFn) {
        return function (context) {
            if (context === void 0) {
                context = { kind: '', story: '' };
            }
            var opts = __assign({}, defaultOptions, typeof options === 'string' ? { summary: options } : options);
            var story = storyFn();
            if (!story.template && story.render) {
                console.warn('This plugin does not support showing story source when using a render method.');
            }
            var propTablesComponents = opts.propTables ? opts.propTables.map(function (c) {
                return typeof c === 'string' ? lookupComponent(c, story.components) : RuntimeComponent.toInfo(c);
            }) : parseStoryComponent(story);
            var propTablesExcludeComponents = opts.propTablesExclude ? opts.propTablesExclude.map(function (c) {
                return typeof c === 'string' ? lookupComponent(c, story.components) : RuntimeComponent.toInfo(c);
            }).map(function (c) {
                return c && c.name;
            }) : [];
            propTablesComponents = propTablesComponents.filter(function (c) {
                return propTablesExcludeComponents.indexOf(c.name) === -1;
            });
            propTablesComponents.forEach(function (c, i) {
                if (!c) {
                    console.error("Failed to lookup component at propTables[" + i + "].");
                    return;
                }
                if (!c.name) {
                    console.warn("A component specified in propTables[" + i + "] has no \"runtime name\". Please consider using string literal.");
                }
            });
            var duplicatedPropsDesc = getDuplicatedPropsDesc(story, propTablesComponents);
            if (duplicatedPropsDesc) {
                console.warn("'" + duplicatedPropsDesc + "' property is used as duplicates. All '" + duplicatedPropsDesc + "' propsDescription may appear identical in all components.");
            }
            var componentDetails = propTablesComponents.map(function (c, i) {
                return !c || c.name ? c : __assign({}, c, { name: "<anonymous>propTables[" + i + "]" });
            }).filter(function (c) {
                return c !== null;
            }).map(function (c) {
                return {
                    info: c,
                    propsList: getPropsInfoList(c.component, story)
                };
            });
            return {
                render: function render(h) {
                    return h(InfoView, {
                        props: {
                            storyKind: context.kind,
                            storyTitle: context.story,
                            summary: marked(dedent(opts.summary)),
                            template: dedent(story.template || getJSXFromRenderFn(story.render)),
                            lang: story.template ? 'html' : 'jsx',
                            componentDetails: componentDetails,
                            showHeader: opts.header,
                            showSource: opts.source,
                            userStyle: opts.styles
                        },
                        scopedSlots: {
                            default: function _default() {
                                return [h(story)];
                            }
                        }
                    });
                }
            };
        };
    };
}

var VueInfoAddon = function VueInfoAddon(storyFn, context) {
    return withInfo({})(storyFn)(context);
};
function setDefaults(opts) {
    Object.assign(defaultOptions, typeof opts === 'string' ? { summary: opts } : opts);
}

export default VueInfoAddon;
export { setDefaults, withInfo };
