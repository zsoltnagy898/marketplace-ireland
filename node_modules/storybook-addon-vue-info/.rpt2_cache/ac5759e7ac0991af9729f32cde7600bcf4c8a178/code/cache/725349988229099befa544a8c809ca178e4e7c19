{"code":"import dedent from 'dedent';\r\nimport { compile } from 'vue-template-compiler';\r\nimport removeDuplicates from './removeDuplicates';\r\nexport var fromTemplate = function (template) {\r\n    var ast = compile(dedent(template)).ast;\r\n    if (!ast) {\r\n        return [];\r\n    }\r\n    return removeDuplicates(retrieveTagNamesFromAST(ast));\r\n};\r\nvar retrieveTagNamesFromAST = function (el) {\r\n    return Array.from(el.children || []).map(function (e) { return retrieveTagNamesFromAST(e); }).slice().reduce(function (dest, cur) { return dest.concat(cur); }, el.tag ? [el.tag] : []);\r\n};\r\nexport var fromJSX = function (render) {\r\n    var result = [];\r\n    render(function (tag, dataObject, _children) {\r\n        switch (typeof tag) {\r\n            case 'string':\r\n                result.push(tag);\r\n                return;\r\n            case 'object':\r\n                if (tag.name) {\r\n                    result.push(tag.name);\r\n                    return;\r\n                }\r\n                return;\r\n            case 'function':\r\n                if (tag.options && typeof tag.options.name === 'string') {\r\n                    result.push(tag.options.name);\r\n                    return;\r\n                }\r\n                return;\r\n            default:\r\n                console.warn(tag);\r\n                return;\r\n        }\r\n    }, {});\r\n    return removeDuplicates(result);\r\n};\r\n","dts":{"name":"/home/pockawoooh/development/github.com/pocka/storybook-addon-vue-info/utils/getTagNames.d.ts","text":"import { VNodeChildren } from 'vue';\r\nexport declare const fromTemplate: (template: string) => string[];\r\ndeclare type Render = (h: (tag: any, dataObject?: any, children?: VNodeChildren) => any, hack: any) => any;\r\nexport declare const fromJSX: (render: Render) => string[];\r\nexport {};\r\n"}}
