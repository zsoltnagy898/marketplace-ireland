{"code":"var getJSXFromRenderFn = function (render) {\r\n    return render(createJSX);\r\n};\r\nexport default getJSXFromRenderFn;\r\nfunction createJSX(tag, childrenOrData, _children) {\r\n    var data = (childrenOrData instanceof Array ? {} : childrenOrData) || {};\r\n    var children = (childrenOrData instanceof Array ? childrenOrData : _children) || [];\r\n    var tagName = getTagName(tag);\r\n    var props = formatDataObject(data);\r\n    return children.length\r\n        ? \"<\" + tagName + (props ? ' ' + props : '') + \">\" + children.join('') + \"</\" + tagName + \">\"\r\n        : \"<\" + tagName + (props ? ' ' + props : '') + \"/>\";\r\n}\r\nvar Anonymous = 'Anonymous';\r\nvar getTagName = function (tag) {\r\n    if (!tag) {\r\n        return Anonymous;\r\n    }\r\n    else if (typeof tag === 'string') {\r\n        return tag;\r\n    }\r\n    else if (tag.name) {\r\n        var t = tag;\r\n        if (!t.options) {\r\n            return t.name || Anonymous;\r\n        }\r\n        else {\r\n            return t.options.name || Anonymous;\r\n        }\r\n    }\r\n    else {\r\n        return Anonymous;\r\n    }\r\n};\r\nvar formatDataObject = function (dataObject) {\r\n    return formatDataObjectItem(dataObject.props).concat(formatDataObjectItem(dataObject.attrs), formatDataObjectItem(dataObject.domProps, 'domProps'), formatDataObjectItem(dataObject.on, 'on'), formatDataObjectItem(dataObject.nativeOn, 'nativeOn'), (dataObject.class ? [formatProp('class', dataObject.class)] : []), (dataObject.style ? [formatProp('style', dataObject.style)] : []), (dataObject.key ? [formatProp('key', dataObject.key)] : []), (dataObject.ref ? [formatProp('ref', dataObject.ref)] : []), (dataObject.slot ? [formatProp('slot', dataObject.slot)] : [])).join(' ');\r\n};\r\nvar formatDataObjectItem = function (item, prefix) {\r\n    if (prefix === void 0) { prefix = ''; }\r\n    return item\r\n        ? Object.keys(item).map(function (key) {\r\n            return formatProp(prefix ? prefix + key[0].toUpperCase() + key.slice(1) : key, item[key]);\r\n        })\r\n        : [];\r\n};\r\nvar formatProp = function (k, v) {\r\n    return typeof v === 'string'\r\n        ? k + \"=\\\"\" + v + \"\\\"\"\r\n        : typeof v === 'function'\r\n            ? k + \"={\" + v.toString() + \"}\"\r\n            : k + \"={\" + JSON.stringify(v) + \"}\";\r\n};\r\n","dts":{"name":"/home/pockawoooh/development/github.com/pocka/storybook-addon-vue-info/utils/getJSXFromRenderFn.d.ts","text":"import { AsyncComponent, Component, VNodeData } from 'vue';\r\nexport declare type RenderFn = (h: CreateJSX) => any;\r\ndeclare const getJSXFromRenderFn: (render: RenderFn) => string;\r\nexport default getJSXFromRenderFn;\r\nexport interface CreateJSX {\r\n    (tag?: Tag, children?: JSXStringChildren): string;\r\n    (tag?: Tag, data?: VNodeData, children?: JSXStringChildren): string;\r\n}\r\nexport declare type JSXStringChildren = string[];\r\nexport declare type Tag = string | Component<any, any, any, any> | AsyncComponent<any, any, any, any> | (() => Component) | undefined;\r\n"}}
